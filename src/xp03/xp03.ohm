XP03 {

	Module = ListOf<Term, #semicolon> #semicolon?

	Term = Typing

	Typing =
		| Term ":" Fn -- default
		| Fn	
	
	Fn =
		| Seq "->" Fn -- default
		| Seq

	Seq =
		| Primary #spaceInline Seq -- default
		| Primary

	Primary =
		| Parens
		| Literal
		| Symbol
		| SymbolType

	Parens = "(" Term ")"

	Literal =
		| true
		| false

	Symbol = symbol

	SymbolType = symbolType

	// lexer

	true = "true" ~ identifierPart
	false = "false" ~ identifierPart

	space := "\t" | " " | "\n" | "\r" | comment
	spaceInline = "\t" | " " | commentInline

	comment = blockComment | lineEndComment
	commentInline = blockCommentInline | lineEndComment

	blockComment = "/*" (~"*/" any)* "*/"
	blockCommentInline = "/*" (~("*/" | "\n" | "\r") any)* "*/"
	lineEndComment = "//" (~("\n" | "\r") any)*

	semicolon =
		| space* (";" | end)
		| spaceInline* ("\r" | "\n" | end)

	comma =
		| space* ("," | end)
		| spaceInline* ("\r" | "\n" | end)

	identifier = identifierStart identifierPart*
	identifierStart = "A".."Z" | "a".."z" | "_" | "$"
	identifierPart = identifierStart | digit
	
	symbol = symbolCharacter+
	symbolType = "`" symbolCharacter+ "`"
	symbolCharacter = ~(
		"`" | "\\" | "\""
		| "(" | ")"
		| "{" | "}"
		| "->"
		| ":"
		| "."
		| ","
		| ";"
		| " "
		| "\u0000".."\u001f"
		) any
}
