Minides {

	Module = StatementList #separator?

	StatementList =
		| StatementList #separator Statement -- default
		| Statement

	Statement = Or

	Or =
		| Or "\\/" And -- default
		| And

	And =
		| And "/\\" Not -- default
		| Not

	Not =
		| "~" Not -- default
		| Primary

	Primary =
		| Parentheses
		| true
		| false
		| Name

	Parentheses = "(" Statement ")"

	Name = identifier

	// lexer

	true = "true" ~ identifierPart
	false = "false" ~ identifierPart

	space := "\t" | " " | "\n" | "\r" | comment
	spaceInline = "\t" | " " | commentInline

	comment = blockComment | lineEndComment
	commentInline = blockCommentInline | lineEndComment

	blockComment = "/*" (~"*/" any)* "*/"
	blockCommentInline = "/*" (~("*/" | "\n" | "\r") any)* "*/"
	lineEndComment = "//" (~("\n" | "\r") any)*

	separator =
		| space* (";" | end)
		| spaceInline* ("\r" | "\n" | end)

	identifier = identifierStart identifierPart*
	identifierStart = "A".."Z" | "a".."z" | "_" | "$"
	identifierPart = identifierStart | digit
}
